ROSTemplateFormatVersion: '2015-09-01'
Description:
  en: 新建ack部署
  zh-cn: new ack
Locals:
  CertManagerImageRegistry:
    Value:
      Fn::Sub:
        - registry-${Region}-vpc.ack.aliyuncs.com/acs
        - Region:
            Ref: ALIYUN::Region
Parameters:
  PayType:
    Type: String
    Label:
      en: ECS Instance Charge Type
      zh-cn: 付费类型
    Default: PostPaid
    AllowedValues:
      - PostPaid
      - PrePaid
    AssociationProperty: ChargeType
    AssociationPropertyMetadata:
      LocaleKey: InstanceChargeType
  PayPeriodUnit:
    Type: String
    Label:
      en: Pay Period Unit
      zh-cn: 购买资源时长周期
    Default: Month
    AllowedValues:
      - Month
      - Year
    AssociationProperty: PayPeriodUnit
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  PayPeriod:
    Type: Number
    Description:
      en: When the resource purchase duration is Month, the value of Period ranges from 1 to 9, 12, 24, 36, 48, or 60. <br><b><font color='red'> When ECS instance types are PrePaid valid </b></font>
      zh-cn: 当购买资源时长为Month时，Period取值：1~9 <br><b><font color='red'>当ECS实例类型为PrePaid有效</b></font>
    Label:
      en: Period
      zh-cn: 购买资源时长
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    AssociationProperty: PayPeriod
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  ZoneId:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance:ZoneId
    Label:
      en: Zone ID
      zh-cn: 可用区
  VpcCidrBlock:
    Type: String
    Label:
      en: VPC CIDR IPv4 Block
      zh-cn: 专有网络IPv4网段
    Description:
      zh-cn: VPC的ip地址段范围，<br>您可以使用以下的ip地址段或其子网:<br><font color='green'>[10.0.0.0/8]</font><br><font color='green'>[172.16.0.0/12]</font><br><font color='green'>[192.168.0.0/16]</font>
      en: 'The ip address range of the VPC in the CidrBlock form; <br>You can use the following ip address ranges and their subnets: <br><font color=''green''>[10.0.0.0/8]</font><br><font color=''green''>[172.16.0.0/12]</font><br><font color=''green''>[192.168.0.0/16]</font>'
    Default: 192.168.0.0/16
    AssociationProperty: ALIYUN::VPC::VPC::CidrBlock
  VSwitchCidrBlock:
    Type: String
    Label:
      en: VSwitch CIDR Block
      zh-cn: 交换机子网网段
    Description:
      zh-cn: 必须属于VPC的子网段。
      en: Must belong to the subnet segment of VPC.
    Default: 192.168.1.0/24
    AssociationProperty: ALIYUN::VPC::VSwitch::CidrBlock
    AssociationPropertyMetadata:
      VpcCidrBlock: VpcCidrBlock
  LoginPassword:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ Special symbol in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ 中的特殊符号）
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::ECS::Instance::Password
    AllowedPattern: ^[a-zA-Z0-9-\(\)\`\~\!\@\#\$\%\^\&\*\_\-\+\=\|\{\}\[\]\:\;\<\>\,\.\?\/]*$
    MinLength: 8
    MaxLength: 30
    Default: computenest*12345
  WorkerInstanceType:
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ${ZoneId}
    Type: String
    AllowedValues:
      - ecs.ebmgn8v.48xlarge
    Label:
      en: Worker Nodes Types
      zh-cn: Worker节点规格
    Description:
      zh-cn: 推荐使用A10卡GN7i GPU云服务器
  WorkerSystemDiskCategory:
    Type: String
    AllowedValues:
      - cloud_efficiency
      - cloud_ssd
      - cloud_essd
    AssociationPropertyMetadata:
      LocaleKey: DiskCategory
      InstanceType: ${WorkerInstanceType}
    Label:
      en: Worker System Disk Category
      zh-cn: Worker 系统盘磁盘类型
    Default: cloud_essd
  WorkerSystemDiskSize:
    Type: Number
    Label:
      en: Worker System Disk Size(GB)
      zh-cn: Worker节点系统盘大小(GB)
    MinValue: 1
    Default: 120
  NumOfNodes:
    Type: Number
    Label:
      en: Number of Worker nodes
      zh-cn: Worker节点数量
    MinValue: 1
    Default: 3
  PodCidr:
    Type: String
    Description:
      zh-cn: 请填写有效的私有网段，即以下网段及其子网：10.0.0.0/8，172.16-31.0.0/12-16，192.168.0.0/16<br>不能与 VPC 及 VPC 内已有 Kubernetes 集群使用的网段重复。<font color='blue'><b>创建成功后不能修改</b></font>
      en: 'Please fill in a valid private segment, i.e. the following segments and their subnets: 10.0.0.0/8, 172.16-31.0.0/12-16, 192.168.0.0/16<br> which cannot duplicate the network segments already used by clusters in VPC and VPC Kunetberes. <font color=''blue''><b>Cannot be modified after successful creation</b></font>'
    Label:
      zh-cn: Pod 网络 CIDR
      en: Pod Network CIDR
    AssociationProperty: ALIYUN::CS::ManagedKubernetesCluster::PodCidr
    Default: 10.0.0.0/16
  ServiceCidr:
    Type: String
    Description:
      zh-cn: 可选范围：10.0.0.0/16-24，172.16-31.0.0/16-24，192.168.0.0/16-24<br>不能与 VPC 及 VPC 内已有 Kubernetes 集群使用的网段重复。<font color='blue'><b>创建成功后不能修改</b></font>
      en: 'Optional range: 10.0.0.0/16-24, 172.16-31.0.0/16-24, 192.168.0.0/16-24<br> cannot duplicate segments already used by existing Kubernetes clusters in VPC and VPC.<font color=''blue''><b>Cannot be modified after successful creation</b></font>'
    Label:
      zh-cn: Service CIDR
      en: Service CIDR
    AssociationProperty: ALIYUN::CS::ManagedKubernetesCluster::ServiceCidr
    Default: 172.16.0.0/16
Resources:
  EcsVpc:
    Type: ALIYUN::ECS::VPC
    Properties:
      VpcName:
        Ref: ALIYUN::StackName
      CidrBlock:
        Ref: VpcCidrBlock
  EcsVSwitch:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      VSwitchName:
        Ref: ALIYUN::StackName
      VpcId:
        Ref: EcsVpc
      ZoneId:
        Ref: ZoneId
      CidrBlock:
        Ref: VSwitchCidrBlock
  EcsSecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupName:
        Ref: ALIYUN::StackName
      VpcId:
        Ref: EcsVpc
      SecurityGroupEgress:
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          DestCidrIp: 0.0.0.0/0
          NicType: intranet
      SecurityGroupIngress:
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          SourceCidrIp:
            Ref: PodCidr
          Description: pod网络访问开放
          NicType: intranet
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          SourceCidrIp:
            Ref: VpcCidrBlock
          Description: vpc网络访问开放
          NicType: intranet
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: icmp
          SourceCidrIp: 0.0.0.0/0
          Description: icmp协议端口放开
          NicType: intranet
  ManagedKubernetesCluster:
    Type: ALIYUN::CS::ManagedKubernetesCluster
    Properties:
      Name:
        Ref: ALIYUN::StackName
      ChargeType:
        Ref: PayType
      Period:
        Ref: PayPeriod
      PeriodUnit:
        Ref: PayPeriodUnit
      VSwitchIds:
        - Ref: EcsVSwitch
      VpcId:
        Ref: EcsVpc
      WorkerInstanceTypes:
        - Ref: WorkerInstanceType
      NumOfNodes:
        Ref: NumOfNodes
      ClusterSpec: ack.pro.small
      ContainerCidr:
        Ref: PodCidr
      ServiceCidr:
        Ref: ServiceCidr
      ZoneIds:
        - Ref: ZoneId
      SecurityGroupId:
        Ref: EcsSecurityGroup
      WorkerSystemDiskCategory:
        Ref: WorkerSystemDiskCategory
      WorkerSystemDiskSize:
        Ref: WorkerSystemDiskSize
      LoginPassword:
        Ref: LoginPassword
      SnatEntry: true
      Addons:
        - Name: flannel
          Config: ''
        - Name: arms-prometheus
        - Name: nginx-ingress-controller
  ClusterAddons:
    Type: ALIYUN::CS::ClusterAddons
    Properties:
      Addons:
        - Name: ack-helm-manager
      InstalledIgnore: true
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
  AddonsSleep:
    Type: ALIYUN::ROS::Sleep
    DependsOn:
      - ClusterAddons
    Properties:
      CreateDuration: 30
  ArenaModule:
    Type: ALIYUN::CS::ClusterHelmApplication
    DependsOn:
      - KserveModule
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      ChartUrl: https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/ack-arena-0.9.16.tgz
      ChartValues:
        global:
          imagePrefix:
            Fn::Sub:
              - registry-${Region}-vpc.ack.aliyuncs.com
              - Region:
                  Ref: ALIYUN::Region
      Namespace: kube-system
      Name: ack-arena
  CertManagerModule:
    Type: ALIYUN::CS::ClusterHelmApplication
    DependsOn:
      - AddonsSleep
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      ChartUrl: https://aliacs-k8s-ap-southeast-1.oss-ap-southeast-1.aliyuncs.com/app/charts-incubator/cert-manager-v1.14.4.tgz
      ChartValues:
        acmesolver:
          image:
            registry:
              Ref: CertManagerImageRegistry
        cainjector:
          image:
            registry:
              Ref: CertManagerImageRegistry
        defaultRegistry:
          Ref: CertManagerImageRegistry
        image:
          registry:
              Ref: CertManagerImageRegistry
        startupapicheck:
          image:
            registry:
              Ref: CertManagerImageRegistry
        webhook:
          image:
            registry:
              Ref: CertManagerImageRegistry
      Namespace: cert-manager
      Name: cert-manager
  KserveSleep:
    Type: ALIYUN::ROS::Sleep
    DependsOn:
      - CertManagerModule
    Properties:
      CreateDuration: 120
  KserveModule:
    Type: MODULE::ACS::ComputeNest::FluxOciHelmDeploy
    Version: v1
    DependsOn:
      - KserveSleep
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      HelmChartUrl: 'oci://compute-nest-chart-registry.cn-hangzhou.cr.aliyuncs.com/public/ack-kserve:v0.13.0'
      ChartValues:
        repository:
          Fn::Sub:
            - registry-${Region}-vpc.ack.aliyuncs.com/acs
            - Region:
                Ref: ALIYUN::Region
        dockerConfigJson: '{{ computenest::acr::dockerconfigjson }}'
        service:
          type: LoadBalancer
          port: 8080
      Namespace: kserve
      ReleaseName: kserve
  OSSRamUser:
    DependsOn: OSSBucket
    Type: ALIYUN::RAM::User
    Properties:
      UserName:
        Ref: ALIYUN::StackName
      Policies:
        - PolicyName:
            Ref: ALIYUN::StackName
          PolicyDocument:
            Statement:
              - Action:
                  - oss:*
                Effect: Allow
                Resource:
                  - Fn::Sub:
                      - "acs:oss:*:*:${BucketName}"
                      - BucketName:
                          Fn::GetAtt:
                            - OSSBucket
                            - Name
                  - Fn::Sub:
                      - "acs:oss:*:*:${BucketName}/*"
                      - BucketName:
                          Fn::GetAtt:
                            - OSSBucket
                            - Name
            Version: '1'
  AccessKey:
    DependsOn: OSSRamUser
    Type: ALIYUN::RAM::AccessKey
    Properties:
      UserName:
        Ref: ALIYUN::StackName
  OSSBucket:
    Type: 'ALIYUN::OSS::Bucket'
    Properties:
      DeletionForce: true
      BucketName:
        Fn::Join:
          - '-'
          - - "knative-vllm"
            - Ref: ALIYUN::StackId
  VllmNamespace:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - ManagedKubernetesCluster
      - AddonsSleep
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent: |
        apiVersion: v1
        kind: Namespace
        metadata:
          name: llm-model
  VllmSecret:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - OSSRamUser
      - VllmNamespace
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent:
        Fn::Sub:
          - |
            apiVersion: v1
            kind: Secret
            metadata:
              name: oss-secret
              namespace: default
            stringData:
              akId: ${AccessKeyId}
              akSecret: ${AccessKeySecret}
          - AccessKeyId:
              Fn::GetAtt:
                - AccessKey
                - AccessKeyId
            AccessKeySecret:
              Fn::GetAtt:
                - AccessKey
                - AccessKeySecret
  VllmPV:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - OSSBucket
      - VllmSecret
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent:
        Fn::Sub:
          - |
            apiVersion: storage.k8s.io/v1
            kind: StorageClass
            metadata:
              name: llm-model
            provisioner: ossplugin.csi.alibabacloud.com
            parameters:
              bucket: "${BucketName}"
              url: "oss-${RegionId}-internal.aliyuncs.com"
              path: "/llm-model"
              otherOpts: "-o umask=022 -o max_stat_cache_size=0 -o allow_other"
              csi.storage.k8s.io/node-publish-secret-name: oss-secret
              csi.storage.k8s.io/node-publish-secret-namespace: default
            reclaimPolicy: Retain
            volumeBindingMode: Immediate
            ---
            apiVersion: v1
            kind: PersistentVolumeClaim
            metadata:
              name: llm-model
              namespace: llm-model
            spec:
              accessModes: [ "ReadWriteMany" ]
              storageClassName: llm-model
              resources:
                requests:
                  storage: 2048Gi
          - RegionId:
              Ref: ALIYUN::Region
            BucketName:
              Fn::GetAtt:
                - OSSBucket
                - Name
  ClusterUserKubeconfig:
    Type: DATASOURCE::CS::ClusterUserKubeconfig
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
  ArenaClientServiceAccount:
    Type: ALIYUN::CS::ClusterApplication
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      DefaultNamespace: default
      YamlContent: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: 'arena-client-sa'
          namespace: "default"
  ArenaClientRole:
    Type: ALIYUN::CS::ClusterApplication
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      DefaultNamespace: default
      YamlContent: |
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: 'arena-client-role'
          namespace: "default"
        rules:
        - apiGroups: [""]
          resources: ["namespaces", "pods"]
          verbs: ["get", "list"]
        - apiGroups: [""]
          resources: ["configmaps", "services", "secrets"]
          verbs: ["get", "list", "create", "delete"]
        - apiGroups: ["serving.kserve.io"]
          resources: ["inferenceservices"]
          verbs: ["get", "list", "create","delete"]
        - apiGroups: ["apps"]
          resources: ["deployments"]
          verbs: ["get", "list"]
        - apiGroups: ["authentication.k8s.io"]
          resources: ["tokenreviews"]
          verbs: ["get", "patch", "create"]
        - apiGroups: ["monitoring.coreos.com"]
          resources: ["servicemonitors"]
          verbs: ["get","create","delete"]
  ArenaClientBinding:
    Type: ALIYUN::CS::ClusterApplication
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      DefaultNamespace: default
      YamlContent: |
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: "kubectl-operate-rolebinding"
          namespace: "default"
        subjects:
        - kind: ServiceAccount
          name: 'arena-client-sa'
          namespace: "default"
        roleRef:
          kind: ClusterRole
          name: 'arena-client-role'
          apiGroup: rbac.authorization.k8s.io
  ArenaClientJob:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - VllmPV
      - RandomApiKey
      - KserveModule
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      DefaultNamespace: default
      YamlContent:
        Fn::Sub:
          - |
            apiVersion: batch/v1
            kind: Job
            metadata:
              labels:
                release: llm-model
              name: arena-client-config-job
              namespace: llm-model
            spec:
              template:
                metadata: 
                  labels:
                    release: llm-model
                  name: arena-client-config-job
                spec:
                  serviceAccountName: arena-client-sa
                  restartPolicy: Never
                  containers:
                  - name: arena-client-config-job
                    image: compute-nest-registry.cn-hangzhou.cr.aliyuncs.com/public/dtzar/helm-kubectl:3.12.0
                    command: [ "/bin/sh", "-c", "--" ] 
                    args:
                      - |///
                        # 输出job日志
                        set -x
                        cd ~
                        mkdir -p ~/.kube
                        echo '${KubeConfig}' | base64 -d >> ~/.kube/config

                        #安装Arena 客户端
                        wget '{{ computenest::file::arena-installer }}' -O arena-installer-0.9.16-881780f-linux-amd64.tar.gz
                        tar -xvf arena-installer-0.9.16-881780f-linux-amd64.tar.gz 
                        cd arena-installer
                        bash install.sh --only-binary
                        
                        #部署KServe推理服务
                        arena serve distributed \
                                --name=vllm-dist \
                                --version=v1 \
                                --restful-port=8080 \
                                --image=kube-ai-registry.cn-shanghai.cr.aliyuncs.com/kube-ai/vllm:v0.7.2 \
                                --readiness-probe-action="tcpSocket" \
                                --readiness-probe-action-option="port: 8080" \
                                --readiness-probe-option="initialDelaySeconds: 30" \
                                --readiness-probe-option="periodSeconds: 30" \
                                --share-memory=30Gi \
                                --data=llm-model:/models/DeepSeek-R1 \
                                --leader-num=1 \
                                --leader-gpus=8 \
                                --leader-command="/vllm-workspace/ray_init.sh leader --ray_cluster_size=\$(LWS_GROUP_SIZE); vllm serve /models/DeepSeek-R1 --port 8080 --trust-remote-code --served-model-name deepseek-r1 --max-model-len 8192 --gpu-memory-utilization 0.95 --tensor-parallel-size 8 --pipeline-parallel-size 2 --enforce-eager" \
                                --worker-num=1 \
                                --worker-gpus=8 \
                                --worker-command="/vllm-workspace/ray_init.sh worker --ray_address=\$(LWS_LEADER_ADDRESS)"
                    volumeMounts:
                      - name: llm-model
                        mountPath: /llm-model
                  volumes:
                  - name: llm-model
                    persistentVolumeClaim:
                      claimName: llm-model
          - KubeConfig: Null
            Fn::Replace:
              - "\n": ''
              - Fn::Base64Encode:
                  Fn::GetAtt:
                    - ClusterUserKubeconfig
                    - Config
      WaitUntil:
        - Kind: Deployment
          Name: llama3-8b-instruct-predictor
          Namespace: default
          JsonPath: $.status.readyReplicas
          Operator: Equals
          Value: '1'
          ValueType: Json
          FirstMatch: true
          Timeout: 6000
  HPAApplication:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - MetricAdapterModule
      - ArenaClientJob
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent: |
        apiVersion: autoscaling/v2
        kind: HorizontalPodAutoscaler
        metadata:
          name: llama3-8b-instruct-hpa
          namespace: default
        spec:
          # HPA的最小Pod数量和最大Pod数量。
          minReplicas: 1
          maxReplicas: 3
          # 监控的指标数组，支持多种类型的指标共存。
          metrics:
          - pods:
              metric:
                name: num_requests_waiting
              target:
                averageValue: 10
                type: AverageValue
            type: Pods
          # HPA的伸缩对象描述，HPA会动态修改该对象的Pod数量。
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: llama3-8b-instruct-predictor
  MetricAdapterModule:
    Type: ALIYUN::CS::ClusterHelmApplication
    DependsOn:
      - ArenaModule
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      ChartUrl: https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/ack-alibaba-cloud-metrics-adapter-1.3.4.tgz
      ChartValues:
        AlibabaCloudMetricsAdapter:
          image:
            repository:
              Fn::Sub:
                - registry-${Region}-vpc.ack.aliyuncs.com/acs/alibaba-cloud-metrics-adapter-amd64
                - Region:
                    Ref: ALIYUN::Region
          prometheus:
            adapter:
              rules:
                custom:
                  - metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
                    resources:
                      overrides:
                        namespace:
                          resource: namespace
                        pod:
                          resource: pod
                    seriesQuery: num_requests_waiting{namespace!="",pod!=""}
                  - metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
                    name:
                      as: ${1}_bytes_per_second
                      matches: ^(.*)_bytes
                    resources:
                      overrides:
                        namespace:
                          resource: namespace
                        pod:
                          resource: pod
                    seriesQuery: container_memory_working_set_bytes{namespace!="",pod!=""}
                  - metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)
                    name:
                      as: ${1}_core_per_second
                      matches: ^(.*)_seconds_total
                    resources:
                      overrides:
                        namespace:
                          resource: namespace
                        pod:
                          resource: pod
                    seriesQuery: container_cpu_usage_seconds_total{namespace!="",pod!=""}
            url:
              Fn::Sub:
                - http://${Region}-intranet.arms.aliyuncs.com:9090/api/v1/prometheus/3dd20b4124b6fe4f2d46dc2ca114f83/${AliUid}/${ClusterId}/${Region}
                - Region:
                    Ref: ALIYUN::Region
                  AliUid:
                    Ref: ALIYUN::TenantId
                  ClusterId:
                    Fn::GetAtt:
                      - ManagedKubernetesCluster
                      - ClusterId
        ConfigReloader:
          image:
            repository:
              Fn::Sub:
                - registry-${Region}-vpc.ack.aliyuncs.com/acs/configmap-reload
                - Region:
                    Ref: ALIYUN::Region
      Namespace: kube-system
      Name: ack-alibaba-cloud-metrics-adapter
  NginxIngressResources:
    Type: DATASOURCE::CS::ClusterApplicationResources
    Properties:
      Namespace: kube-system
      Kind: Service
      JsonPath: $.status.loadBalancer.ingress[0].ip
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      Name: nginx-ingress-lb
Outputs:
  TroubleshootingInstructions:
    Label: 排查说明
    Value:
      Fn::Sub:
        - 若部署失败，请到ACK集群:https://cs.console.aliyun.com/#/k8s/cluster/${ClusterId}/v2/info/overview?region=${RegionId} 中排查。
        - ClusterId:
            Fn::GetAtt:
            - ManagedKubernetesCluster
            - ClusterId
          RegionId:
            Ref: ALIYUN::Region
  UserInstructions:
    Label: 使用说明
    Description: 通过以下命令发送HTTP请求访问推理服务，修改content的内容，即可自定义和推理服务交互的内容
    Value:
      Fn::Sub:
        - 'curl -H "Host: llama3-8b-instruct-default.example.com" -H "Content-Type: application/json" http://${Address}/v1/chat/completions -d ''{"model": "meta/llama3-8b-instruct", "messages": [{"role": "user", "content": "xxx"}], "max_tokens": 64, "temperature": 0.7, "top_p": 0.9, "seed": 10}'''
        - Address:
            Fn::Select:
              - 0
              - Fn::GetAtt:
                  - NginxIngressResources
                  - Response
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - NVIDIA-API-Key
        Label:
          en: NIVIDA Configuration
          zh-cn: NIVIDA NGC 配置
      - Parameters:
          - PayType
          - PayPeriodUnit
          - PayPeriod
        Label:
          en: PayType Configuration
          zh-cn: 付费类型配置
      - Parameters:
          - WorkerInstanceType
          - WorkerSystemDiskCategory
          - WorkerSystemDiskSize
          - NumOfNodes
          - ServiceCidr
          - PodCidr
          - LoginPassword
        Label:
          en: Kubernetes
          zh-cn: Kubernetes配置
      - Parameters:
          - ZoneId
        Label:
          en: Zone Configuration
          zh-cn: 可用区配置
      - Parameters:
          - VpcCidrBlock
          - VSwitchCidrBlock
        Label:
          en: NetworK Configuration
          zh-cn: 网络配置