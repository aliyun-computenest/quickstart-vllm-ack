ROSTemplateFormatVersion: '2015-09-01'
Description:
  en: 新建ACK部署Knative,并用vllm部署大模型
  zh-cn: New ack deployment Knative and use vllm deploy llm.
Conditions:
  CreateVpcConditions:
    Fn::Equals:
      - NewVPC
      - Ref: VpcOption
  IsPublicEnabled:
    Fn::Equals:
      - Ref: SupportPublicAccess
      - true
Parameters:
  Model:
    Type: String
    Label:
      en: Model
      zh-cn: 选择模型
    AssociationPropertyMetadata:
      ValueLabelMapping:
        QwQ-32b:
          zh-cn: QwQ-32b
          en: QwQ-32b
        DeepSeek-R1_7b:
          zh-cn: DeepSeek-R1:7b
          en: DeepSeek-R1:7b
        DeepSeek-R1_32b:
          zh-cn: DeepSeek-R1:32b
          en: DeepSeek-R1:32b
        DeepSeek-R1_70b:
          zh-cn: DeepSeek-R1:70b
          en: DeepSeek-R1:70b
    AllowedValues:
      - QwQ-32b
      - DeepSeek-R1_7b
      - DeepSeek-R1_32b
      - DeepSeek-R1_70b
    Default: QwQ-32b
  VpcOption:
    Type: String
    AllowedValues:
      - NewVPC
      - ExistingVPC
    AssociationPropertyMetadata:
      ValueLabelMapping:
        NewVPC:
          zh-cn: 新建专有网络
          en: New VPC
        ExistingVPC:
          zh-cn: 已有专有网络
          en: Existing VPC
    Label:
      en: Select Existing or New VPC
      zh-cn: 选择已有/新建的专有网络
    Required: true
    Default: NewVPC
  PayType:
    Type: String
    Label:
      en: ECS Instance Charge Type
      zh-cn: 付费类型
    Default: PostPaid
    AllowedValues:
      - PostPaid
      - PrePaid
    AssociationProperty: ChargeType
    AssociationPropertyMetadata:
      LocaleKey: InstanceChargeType
  PayPeriodUnit:
    Type: String
    Label:
      en: Pay Period Unit
      zh-cn: 购买资源时长周期
    Default: Month
    AllowedValues:
      - Month
      - Year
    AssociationProperty: PayPeriodUnit
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  PayPeriod:
    Type: Number
    Description:
      en: When the resource purchase duration is Month, the value of Period ranges from 1 to 9, 12, 24, 36, 48, or 60. <br><b><font color='red'> When ECS instance types are PrePaid valid </b></font>
      zh-cn: 当购买资源时长为Month时，Period取值：1~9 <br><b><font color='red'>当ECS实例类型为PrePaid有效</b></font>
    Label:
      en: Period
      zh-cn: 购买资源时长
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    AssociationProperty: PayPeriod
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  ZoneId:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance:ZoneId
    AssociationPropertyMetadata:
      InstanceType: ${WorkerInstanceType}
    Label:
      en: Zone ID
      zh-cn: 可用区
  VpcCidrBlock:
    Type: String
    Label:
      en: VPC CIDR IPv4 Block
      zh-cn: 专有网络IPv4网段
    Description:
      zh-cn: VPC的ip地址段范围，<br>您可以使用以下的ip地址段或其子网:<br><font color='green'>[10.0.0.0/8]</font><br><font color='green'>[172.16.0.0/12]</font><br><font color='green'>[192.168.0.0/16]</font>
      en: 'The ip address range of the VPC in the CidrBlock form; <br>You can use the following ip address ranges and their subnets: <br><font color=''green''>[10.0.0.0/8]</font><br><font color=''green''>[172.16.0.0/12]</font><br><font color=''green''>[192.168.0.0/16]</font>'
    Default: 192.168.0.0/16
    Required:
      Fn::Equals:
        - NewVPC
        - ${VpcOption}
    AssociationProperty: ALIYUN::VPC::VPC::CidrBlock
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Equals:
            - NewVPC
            - ${VpcOption}
  VpcId:
    Type: String
    Label:
      en: VPC ID
      zh-cn: 专有网络VPC实例ID
    AssociationProperty: 'ALIYUN::ECS::VPC::VPCId'
    Required:
      Fn::Equals:
        - ExistingVPC
        - ${VpcOption}
    Default: ''
    AssociationPropertyMetadata:
      AutoSelectFirst: true
      Visible:
        Condition:
          Fn::Equals:
            - ExistingVPC
            - ${VpcOption}
  VSwitchId:
    Type: String
    Label:
      en: VSwitch ID
      zh-cn: 交换机实例ID
    Default: ''
    AssociationProperty: 'ALIYUN::ECS::VSwitch::VSwitchId'
    Required:
      Fn::Equals:
        - ExistingVPC
        - ${VpcOption}
    AssociationPropertyMetadata:
      AutoSelectFirst: true
      VpcId: ${VpcId}
      ZoneId: ${ZoneId}
      Visible:
        Condition:
          Fn::Equals:
            - ExistingVPC
            - ${VpcOption}
  VSwitchCidrBlock:
    Type: String
    Label:
      en: VSwitch CIDR Block
      zh-cn: 交换机子网网段
    Description:
      zh-cn: 必须属于VPC的子网段。
      en: Must belong to the subnet segment of VPC.
    Default: 192.168.1.0/24
    Required:
      Fn::Equals:
        - NewVPC
        - ${VpcOption}
    AssociationProperty: ALIYUN::VPC::VSwitch::CidrBlock
    AssociationPropertyMetadata:
      VpcCidrBlock: VpcCidrBlock
      Visible:
        Condition:
          Fn::Equals:
            - NewVPC
            - ${VpcOption}
  LoginPassword:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ Special symbol in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ 中的特殊符号）
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;<>,.?/ 中的特殊符号）
    AssociationProperty: ALIYUN::ECS::Instance::Password
    AllowedPattern: ^[a-zA-Z0-9-\(\)\`\~\!\@\#\$\%\^\&\*\_\-\+\=\|\{\}\[\]\:\;\<\>\,\.\?\/]*$
    MinLength: 8
    MaxLength: 30
    Default: computenest*12345
  WorkerInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    Description: 如当前地域的实例规格不足或无可购买规格，请切换到北京、上海等大地域查看。
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: ${PayType}
      ZoneId: ${ZoneId}
      AllowedValues:
        - Condition:
            Fn::Equals:
              - '${Model}'
              - 'QwQ-32b'
          Value:
            - ecs.gn7i-c32g1.32xlarge
            - ecs.gn7i-4x.8xlarge
            - ecs.gn7i-4x.16xlarge
            - ecs.gn7i-8x.16xlarge
            - ecs.gn7i-8x.32xlarge
            - ecs.gn7e-c16g1.4xlarge
            - ecs.gn7e-c16g1.8xlarge
            - ecs.gn7e-c16g1.16xlarge
            - ecs.gn7e-c16g1.32xlarge
            - ecs.gn7s-c32g1.8xlarge
            - ecs.gn7s-c32g1.16xlarge
            - ecs.gn7s-c32g1.32xlarge
            - ecs.ebmgn8v.48xlarge
            - ecs.ebmgn7e.32xlarge
            - ecs.ebmgn7ex.32xlarge
            - ecs.ebmgn7i.32xlarge
            - ecs.ebmgn7ix.32xlarge
            - ecs.ebmgn7v.32xlarge
            - ecs.ebmgn7vx.32xlarge
            - ecs.ebmgn7.32xlarge
            - ecs.ebmgn6i.24xlarge
        - Condition:
            Fn::Equals:
              - '${Model}'
              - 'DeepSeek-R1_7b'
          Value:
            - ecs.gn7i-c8g1.2xlarge
            - ecs.gn7i-c16g1.4xlarge
            - ecs.gn7i-c32g1.8xlarge
            - ecs.gn7i-c48g1.12xlarge
            - ecs.gn7i-c56g1.14xlarge
            - ecs.gn7i-c32g1.16xlarge
            - ecs.gn7i-c32g1.32xlarge
            - ecs.gn7i-c56g1.14xlarge
            - ecs.gn7i-c48g1.12xlarge
            - ecs.gn7i-c48e.12xlarge
            - ecs.gn7i-8x.16xlarge
            - ecs.gn7i-4x.8xlarge
            - ecs.gn7i-2x.8xlarge
            - ecs.gn7i-8x.32xlarge
            - ecs.gn7i-4x.16xlarge
            - ecs.gn7e-c16g1.4xlarge
            - ecs.gn7e-c16g1.16xlarge
            - ecs.gn7e-c16g1.32xlarge
            - ecs.gn7e-c16g1.8xlarge
            - ecs.gn7s-c8g1.2xlarge
            - ecs.gn7s-c32g1.16xlarge
            - ecs.gn7s-c32g1.8xlarge
            - ecs.gn7s-c32g1.32xlarge
            - ecs.gn7s-c48g1.12xlarge
            - ecs.gn7s-c16g1.4xlarge
            - ecs.gn7s-c56g1.14xlarge
            - ecs.ebmgn8v.48xlarge
            - ecs.ebmgn7e.32xlarge
            - ecs.ebmgn7ex.32xlarge
            - ecs.ebmgn7i.32xlarge
            - ecs.ebmgn7ix.32xlarge
            - ecs.ebmgn7v.32xlarge
            - ecs.ebmgn7vx.32xlarge
            - ecs.ebmgn7.32xlarge
            - ecs.ebmgn6i.24xlarge
        - Condition:
            Fn::Equals:
              - '${Model}'
              - 'DeepSeek-R1_32b'
          Value:
            - ecs.gn7i-c32g1.32xlarge
            - ecs.gn7i-4x.8xlarge
            - ecs.gn7i-4x.16xlarge
            - ecs.gn7i-8x.16xlarge
            - ecs.gn7i-8x.32xlarge
            - ecs.gn7e-c16g1.4xlarge
            - ecs.gn7e-c16g1.8xlarge
            - ecs.gn7e-c16g1.16xlarge
            - ecs.gn7e-c16g1.32xlarge
            - ecs.gn7s-c32g1.8xlarge
            - ecs.gn7s-c32g1.16xlarge
            - ecs.gn7s-c32g1.32xlarge
            - ecs.ebmgn8v.48xlarge
            - ecs.ebmgn7e.32xlarge
            - ecs.ebmgn7ex.32xlarge
            - ecs.ebmgn7i.32xlarge
            - ecs.ebmgn7ix.32xlarge
            - ecs.ebmgn7v.32xlarge
            - ecs.ebmgn7vx.32xlarge
            - ecs.ebmgn7.32xlarge
            - ecs.ebmgn6i.24xlarge
        - Condition:
            Fn::Equals:
              - '${Model}'
              - 'DeepSeek-R1_70b'
          Value:
            - ecs.gn7i-8x.16xlarge
            - ecs.gn7i-8x.32xlarge
            - ecs.ebmgn8v.48xlarge
  WorkerSystemDiskCategory:
    Type: String
    AllowedValues:
      - cloud_efficiency
      - cloud_ssd
      - cloud_essd
    AssociationProperty: ALIYUN::ECS::Disk::SystemDiskCategory
    AssociationPropertyMetadata:
      LocaleKey: DiskCategory
      InstanceType: ${WorkerInstanceType}
    Label:
      en: Worker System Disk Category
      zh-cn: Worker 系统盘磁盘类型
    Default: cloud_essd
  NumOfNodes:
    Type: Number
    Label:
      en: Number of Worker nodes
      zh-cn: Worker节点数量
    MinValue: 1
    Default: 3
  PodCidr:
    Type: String
    Description:
      zh-cn: 请填写有效的私有网段，即以下网段及其子网：10.0.0.0/8，172.16-31.0.0/12-16，192.168.0.0/16<br>不能与 VPC 及 VPC 内已有 Kubernetes 集群使用的网段重复。<font color='blue'><b>创建成功后不能修改</b></font>
      en: 'Please fill in a valid private segment, i.e. the following segments and their subnets: 10.0.0.0/8, 172.16-31.0.0/12-16, 192.168.0.0/16<br> which cannot duplicate the network segments already used by clusters in VPC and VPC Kunetberes. <font color=''blue''><b>Cannot be modified after successful creation</b></font>'
    Label:
      zh-cn: Pod 网络 CIDR
      en: Pod Network CIDR
    AssociationProperty: 'ALIYUN::CS::ManagedKubernetesCluster::PodCidr'
    Default: 10.0.0.0/16
  ServiceCidr:
    Type: String
    Description:
      zh-cn: 可选范围：10.0.0.0/16-24，172.16-31.0.0/16-24，192.168.0.0/16-24<br>不能与 VPC 及 VPC 内已有 Kubernetes 集群使用的网段重复。<font color='blue'><b>创建成功后不能修改</b></font>
      en: 'Optional range: 10.0.0.0/16-24, 172.16-31.0.0/16-24, 192.168.0.0/16-24<br> cannot duplicate segments already used by existing Kubernetes clusters in VPC and VPC.<font color=''blue''><b>Cannot be modified after successful creation</b></font>'
    Label:
      zh-cn: Service CIDR
      en: Service CIDR
    AssociationProperty: ALIYUN::CS::ManagedKubernetesCluster::ServiceCidr
    AssociationPropertyMetadata:
      ClusterType: ManagedKubernetes
      VpcId: ${VpcId}
      ContainerCidr: ${PodCidr}
      Addons:
        - name: flannel
    Default: 172.16.0.0/16
  SupportPublicAccess:
    Type: Boolean
    Label:
      zh-cn: 支持公网访问
      en: Support Public Access
Resources:
  RandomApiKey:
    Type: ALIYUN::RandomString
    Properties:
      length: 29
      character_classes:
        - class: lowercase
          min: 1
        - class: digits
          min: 1
  EcsVpc:
    Type: ALIYUN::ECS::VPC
    Condition: CreateVpcConditions
    Properties:
      VpcName:
        Ref: ALIYUN::StackName
      CidrBlock:
        Ref: VpcCidrBlock
  EcsVSwitch:
    Type: ALIYUN::ECS::VSwitch
    Condition: CreateVpcConditions
    Properties:
      VSwitchName:
        Ref: ALIYUN::StackName
      VpcId:
        Ref: EcsVpc
      ZoneId:
        Ref: ZoneId
      CidrBlock:
        Ref: VSwitchCidrBlock
  EcsSecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupName:
        Ref: ALIYUN::StackName
      VpcId:
        Fn::If:
          - CreateVpcConditions
          - Ref: EcsVpc
          - Ref: VpcId
      SecurityGroupEgress:
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          DestCidrIp: 0.0.0.0/0
          NicType: intranet
      SecurityGroupIngress:
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          SourceCidrIp:
            Ref: PodCidr
          Description: pod网络访问开放
          NicType: intranet
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: all
          SourceCidrIp:
            Ref: VpcCidrBlock
          Description: vpc网络访问开放
          NicType: intranet
        - PortRange: '-1/-1'
          Priority: 1
          IpProtocol: icmp
          SourceCidrIp: 0.0.0.0/0
          Description: icmp协议端口放开
          NicType: intranet
        - Priority: 1
          PortRange: 8080/8080
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
  OSSRamUser:
    DependsOn: OSSBucket
    Type: ALIYUN::RAM::User
    Properties:
      UserName:
        Ref: ALIYUN::StackName
      Policies:
        - PolicyName:
            Ref: ALIYUN::StackName
          PolicyDocument:
            Statement:
              - Action:
                  - oss:*
                Effect: Allow
                Resource:
                  - Fn::Sub:
                      - "acs:oss:*:*:${BucketName}"
                      - BucketName:
                          Fn::GetAtt:
                            - OSSBucket
                            - Name
                  - Fn::Sub:
                      - "acs:oss:*:*:${BucketName}/*"
                      - BucketName:
                          Fn::GetAtt:
                            - OSSBucket
                            - Name
            Version: '1'
  AccessKey:
    DependsOn: OSSRamUser
    Type: ALIYUN::RAM::AccessKey
    Properties:
      UserName:
        Ref: ALIYUN::StackName
  ManagedKubernetesCluster:
    Type: ALIYUN::CS::ManagedKubernetesCluster
    Properties:
      Name:
        Ref: ALIYUN::StackName
      ChargeType:
        Ref: PayType
      Period:
        Ref: PayPeriod
      PeriodUnit:
        Ref: PayPeriodUnit
      VSwitchIds:
        - Fn::If:
            - CreateVpcConditions
            - Ref: EcsVSwitch
            - Ref: VSwitchId
      VpcId:
        Fn::If:
          - CreateVpcConditions
          - Ref: EcsVpc
          - Ref: VpcId
      WorkerInstanceTypes:
        - Ref: WorkerInstanceType
      NumOfNodes:
        Ref: NumOfNodes
      ClusterSpec: ack.pro.small
      ContainerCidr:
        Ref: PodCidr
      ServiceCidr:
        Ref: ServiceCidr
      ZoneIds:
        - Ref: ZoneId
      SecurityGroupId:
        Ref: EcsSecurityGroup
      WorkerSystemDiskCategory:
        Ref: WorkerSystemDiskCategory
      WorkerSystemDiskSize:
        Fn::FindInMap:
          - ModelMapping
          - WorkerSystemDiskSizeMap
          - Ref: Model
      LoginPassword:
        Ref: LoginPassword
      SnatEntry: true
      Addons:
        - Name: flannel
          Config: ''
        - Name: arms-prometheus
  ClusterAddons:
    Type: ALIYUN::CS::ClusterAddons
    Properties:
      Addons:
        - Name: ack-helm-manager
        - Name: knative
      InstalledIgnore: true
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
  AddonsSleep:
    Type: ALIYUN::ROS::Sleep
    DependsOn:
      - ClusterAddons
    Properties:
      CreateDuration: 30
  KourierModule:
    Type: ALIYUN::CS::ClusterHelmApplication
    DependsOn:
      - AddonsSleep
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      ChartUrl: https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/ack-knative-kourier-1.4.0.tgz
      ChartValues:
        version: v1.14.2-aliyun.6
        regionID:
          Ref: ALIYUN::Region
        registryURL:
          Fn::Sub:
            - registry-${Region}-vpc.ack.aliyuncs.com
            - Region:
                Ref: ALIYUN::Region
      Namespace: knative-serving
      Name: knative-kourier
  FluidModule:
    Type: MODULE::ACS::ComputeNest::FluxOciHelmDeploy
    Version: v1
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      HelmChartUrl: oci://compute-nest-chart-registry.cn-hangzhou.cr.aliyuncs.com/1563457855438522/ack-fluid:1.0.13
      ChartValues:
        region:
          Ref: ALIYUN::Region
        version: 1.0.13-fc3296a6
        cluster_profile: ManagedKubernetes
        clusterProfileforApp: Default
        appendImageTag: true
      Namespace: fluid-system
      ReleaseName: ack-fluid
  KnativeSleep:
    Type: ALIYUN::ROS::Sleep
    DependsOn:
      - KourierModule
    Properties:
      CreateDuration: 60
  KserveModule:
    Type: MODULE::ACS::ComputeNest::FluxOciHelmDeploy
    Version: v1
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      HelmChartUrl: 'oci://compute-nest-chart-registry.cn-hangzhou.cr.aliyuncs.com/public/ack-kserve:v0.13.0'
      ChartValues:
        repository:
          Fn::Sub:
            - registry-${Region}-vpc.ack.aliyuncs.com/acs
            - Region:
                Ref: ALIYUN::Region
        dockerConfigJson: '{{ computenest::acr::dockerconfigjson }}'
        service:
          type: LoadBalancer
          port: 8080
      Namespace: kserve
      ReleaseName: kserve
  KourierInternalLBApplication:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - ManagedKubernetesCluster
      - KnativeSleep
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent: |
          apiVersion: v1
          kind: Service
          metadata:
            annotations:
              service.beta.kubernetes.io/alibaba-cloud-loadbalancer-address-type: intranet
              service.beta.kubernetes.io/alibaba-cloud-loadbalancer-instance-charge-type: PayByCLCU
              service.beta.kubernetes.io/alibaba-cloud-loadbalancer-ip-version: ipv4
              service.beta.kubernetes.io/alibaba-cloud-loadbalancer-name: kourier-internal-lb
            name: kourier-internal-lb
            namespace: knative-serving
          spec:
            type: LoadBalancer
            externalTrafficPolicy: Local
            internalTrafficPolicy: Cluster
            ipFamilies:
              - IPv4
            ipFamilyPolicy: SingleStack
            allocateLoadBalancerNodePorts: true
            ports:
              - name: http2
                port: 80
                targetPort: 8081
                protocol: TCP
              - name: https
                port: 443
                targetPort: 8444
                protocol: TCP
            selector:
              app: 3scale-kourier-gateway
            sessionAffinity: None
      WaitUntil:
        - Kind: Service
          ApiVersion: v1
          Name: kourier-internal-lb
          Namespace: knative-serving
          JsonPath: $.status.loadBalancer.ingress[0].ip
          Operator: NotEmpty
          Value: ""
          ValueType: String
          FirstMatch: true
          Timeout: 600
  KourierPrivateIngressResources:
    Type: DATASOURCE::CS::ClusterApplicationResources
    DependsOn:
      - KourierInternalLBApplication
    Properties:
      Namespace: knative-serving
      Kind: Service
      FirstMatch: True
      ApiVersion: v1
      JsonPath: $.status.loadBalancer.ingress[0].ip
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      Name: kourier-internal-lb
  KourierPublicIngressResources:
    Type: DATASOURCE::CS::ClusterApplicationResources
    DependsOn:
      - KnativeSleep
    Condition: IsPublicEnabled
    Properties:
      Namespace: knative-serving
      Kind: Service
      FirstMatch: True
      ApiVersion: v1
      JsonPath: $.status.loadBalancer.ingress[0].ip
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      Name: kourier
  OSSBucket:
    Type: 'ALIYUN::OSS::Bucket'
    Properties:
      DeletionForce: true
      BucketName:
        Fn::Join:
          - '-'
          - - "knative-vllm"
            - Ref: ALIYUN::StackId
  VllmNamespace:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - ManagedKubernetesCluster
      - AddonsSleep
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent: |
        apiVersion: v1
        kind: Namespace
        metadata:
          name: llm-model
  VllmSecret:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - OSSRamUser
      - VllmNamespace
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent:
        Fn::Sub:
          - |
            apiVersion: v1
            kind: Secret
            metadata:
              name: oss-secret
              namespace: default
            stringData:
              akId: ${AccessKeyId}
              akSecret: ${AccessKeySecret}
          - AccessKeyId:
              Fn::GetAtt:
                - AccessKey
                - AccessKeyId
            AccessKeySecret:
              Fn::GetAtt:
                - AccessKey
                - AccessKeySecret
  VllmPV:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - OSSBucket
      - VllmSecret
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent:
        Fn::Sub:
          - |
            apiVersion: storage.k8s.io/v1
            kind: StorageClass
            metadata:
              name: llm-model
            provisioner: ossplugin.csi.alibabacloud.com
            parameters:
              bucket: "${BucketName}"
              url: "oss-${RegionId}-internal.aliyuncs.com"
              path: "/llm-model"
              otherOpts: "-o umask=022 -o max_stat_cache_size=0 -o allow_other"
              csi.storage.k8s.io/node-publish-secret-name: oss-secret
              csi.storage.k8s.io/node-publish-secret-namespace: default
            reclaimPolicy: Retain
            volumeBindingMode: Immediate
            ---
            apiVersion: v1
            kind: PersistentVolumeClaim
            metadata:
              name: llm-model
              namespace: llm-model
            spec:
              accessModes: [ "ReadWriteMany" ]
              storageClassName: llm-model
              resources:
                requests:
                  storage: 4Ti
          - RegionId:
              Ref: ALIYUN::Region
            BucketName:
              Fn::GetAtt:
                - OSSBucket
                - Name
  VllmApplication:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - VllmPV
      - RandomApiKey
      - AckNodeInstance
    Properties:
      YamlContent:
        Fn::Sub:
          - |
            apiVersion: serving.knative.dev/v1
            kind: Service
            metadata:
              labels:
                release: llm-model
                ${VisibilityLabel}
              name: ${ModelDomainName}
              namespace: llm-model
            spec:
              template:
                metadata:
                  annotations:
                    autoscaling.knative.dev/min-scale: "1"
                  labels:
                    release: llm-model
                spec:
                  initContainers:
                  - name: model-fetcher
                    image: kube-ai-registry.cn-shanghai.cr.aliyuncs.com/kube-ai/vllm:v0.7.2
                    command:
                      - bash
                    args:
                      - -c
                      - |
                        # 如果克隆的目录不在oss中，则下载
                        if [ ! -d "/llm-model/${ModelName}/.git" ]; then
                          apt-get update
                          apt-get install pigz -y
                          echo "Download the ${ModelName} model."
                          cd /llm-model
                          if [ "${ModelName}" = "deepseek-ai/DeepSeek-R1-Distill-Qwen-7B" ]; then
                            wget -q '{{ computenest::file::deepseek_r1_7b }}' -O deepseek-r1-7b.tar.gz
                            mkdir -p /llm-model/${ModelName}
                            tar -I pigz -xvf deepseek-r1-7b.tar.gz --strip-components=1 -C /llm-model/${ModelName}/
                            rm -rf deepseek-r1-7b.tar.gz
                            exit 0
                          elif [ "${ModelName}" = "deepseek-ai/DeepSeek-R1-Distill-Qwen-32B" ]; then
                            wget -q  '{{ computenest::file::deepseek_r1_32b }}' -O deepseek-r1-32b.tar.gz
                            mkdir -p /llm-model/${ModelName}
                            tar -I pigz -xvf deepseek-r1-32b.tar.gz --strip-components=1 -C /llm-model/${ModelName}/
                            rm -rf deepseek-r1-32b.tar.gz
                            exit 0
                          elif [ "${ModelName}" = "deepseek-ai/DeepSeek-R1-Distill-Llama-70B" ]; then
                            wget -q  '{{ computenest::file::deepseek_r1_70b }}' -O deepseek-r1-70b.tar.gz
                            mkdir -p /llm-model/${ModelName}
                            tar -I pigz -xvf deepseek-r1-70b.tar.gz --strip-components=1 -C /llm-model/${ModelName}/
                            rm -rf deepseek-r1-70b.tar.gz
                            exit 0
                          elif [ "${ModelName}" = "Qwen/QwQ-32B" ]; then
                            wget -q  '{{ computenest::file::qwq_32b }}' -O qwq-32b.tar.gz
                            mkdir -p /llm-model/${ModelName}
                            tar -I pigz -xvf qwq-32b.tar.gz --strip-components=1 -C /llm-model/${ModelName}/
                            rm -rf qwq-32b.tar.gz
                            exit 0
                          else
                            echo "The ${ModelName} model does not exist."
                          fi
                        else
                          echo "Repository already cloned."
                        fi
                    
                    volumeMounts:
                    - name: llm-model
                      mountPath: /llm-model
                  containers:
                  - name: vllm-container
                    env:
                    - name: VLLM_API_KEY
                      value: ${VllmApiKey}
                    - name: NCCL_SHM_DISABLE
                      value: "1"
                    command:
                    - sh
                    - -c
                    - python3 -m vllm.entrypoints.openai.api_server --port 8080 --trust-remote-code
                      --served-model-name ${ModelName} --model /llm-model/${ModelName} --gpu-memory-utilization
                      ${GpuMemoryUtilization} --max-model-len ${MaxModelLen} --tensor-parallel-size ${GpuAmount}
                      --enable-chunked-prefill --enforce-eager
                    image: kube-ai-registry.cn-shanghai.cr.aliyuncs.com/kube-ai/vllm:v0.7.2
                    imagePullPolicy: IfNotPresent
                    readinessProbe:
                      tcpSocket:
                        port: 8080
                      initialDelaySeconds: 5
                      periodSeconds: 5
                    resources:
                      requests:
                        cpu: "8"
                        memory: 16Gi
                        nvidia.com/gpu: ${GpuAmount}
                      limits:
                        nvidia.com/gpu: ${GpuAmount}
                    volumeMounts:
                    - mountPath: /llm-model # 模型所在的路径
                      name: llm-model
                  volumes:
                  - name: llm-model
                    persistentVolumeClaim:
                      claimName: llm-model
          - ModelName:
              Fn::FindInMap:
                - ModelMapping
                - ModelNameMap
                - Ref: Model
            ModelDomainName:
              Fn::FindInMap:
                - ModelMapping
                - ModelDomainNameMap
                - Ref: Model
            MaxModelLen:
              Fn::FindInMap:
                - ModelMapping
                - MaxModelLenMap
                - Ref: Model
            GpuMemoryUtilization:
              Fn::FindInMap:
                - ModelMapping
                - GpuMemoryUtilizationMap
                - Ref: Model
            GpuAmount:
              Fn::GetAtt:
                - AckNodeInstance
                - GpuAmount
            VllmApiKey:
              Fn::Join:
                - '-'
                - - 'cn'
                  - Fn::GetAtt:
                      - RandomApiKey
                      - value
            VisibilityLabel:
              Fn::If:
                - IsPublicEnabled
                - ""
                - "networking.knative.dev/visibility: cluster-local"
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      WaitUntil:
        - Kind: Deployment
          Name: llm-model-00001-deployment
          Namespace: llm-model
          JsonPath: $.status.readyReplicas
          Operator: Equals
          Value: '1'
          ValueType: Json
          FirstMatch: true
          Timeout: 10800
  FluidApplication:
    Type: ALIYUN::CS::ClusterApplication
    DependsOn:
      - ManagedKubernetesCluster
      - OSSRamUser
      - OSSBucket
      - VllmApplication
      - FluidModule
    Properties:
      ClusterId:
        Fn::GetAtt:
          - ManagedKubernetesCluster
          - ClusterId
      YamlContent:
        Fn::Sub:
          - |
            apiVersion: v1
            kind: Secret
            metadata:
              name: fluid-oss-secret
              namespace: llm-model
            stringData:
              fs.oss.accessKeyId: ${AccessKeyId}
              fs.oss.accessKeySecret: ${AccessKeySecret}
            ---
            apiVersion: data.fluid.io/v1alpha1
            kind: Dataset
            metadata:
              name: llm-model
              namespace: llm-model
            spec:
              mounts:
                - mountPoint: oss://${BucketName}/llm-model/${ModelName} # 请替换为实际的模型存储地址。
                  options:
                    fs.oss.endpoint: oss-${RegionId}-internal.aliyuncs.com # 请替换为实际的OSS endpoint地址。
                  name: models
                  path: "/"
                  encryptOptions:
                    - name: fs.oss.accessKeyId
                      valueFrom:
                        secretKeyRef:
                          name: fluid-oss-secret
                          key: fs.oss.accessKeyId
                    - name: fs.oss.accessKeySecret
                      valueFrom:
                        secretKeyRef:
                          name: fluid-oss-secret
                          key: fs.oss.accessKeySecret
            ---
            apiVersion: data.fluid.io/v1alpha1
            kind: JindoRuntime
            metadata:
              name: llm-model # 需要与Dataset名称保持一致。
              namespace: llm-model
            spec:
              replicas: 3
              tieredstore:
                levels:
                  - mediumtype: MEM # 使用内存缓存数据。
                    volumeType: emptyDir
                    path: /dev/shm
                    quota: 10Gi # 单个分布式缓存Worker副本所能提供的缓存容量。
                    high: "0.95"
                    low: "0.7"
              fuse:
                resources:
                  requests:
                    memory: 2Gi
                properties:
                  fs.oss.download.thread.concurrency: "200"
                  fs.oss.read.buffer.size: "8388608"
                  fs.oss.read.readahead.max.buffer.count: "200"
                  fs.oss.read.sequence.ambiguity.range: "2147483647"
          - RegionId:
              Ref: ALIYUN::Region
            BucketName:
              Fn::GetAtt:
                - OSSBucket
                - Name
            ModelName:
              Fn::FindInMap:
                 - ModelMapping
                 - ModelNameMap
                 - Ref: Model
            AccessKeyId:
              Fn::GetAtt:
                - AccessKey
                - AccessKeyId
            AccessKeySecret:
              Fn::GetAtt:
                - AccessKey
                - AccessKeySecret
  AckNodeInstance:
    Type: DATASOURCE::ECS::Instance
    DependsOn:
     - ManagedKubernetesCluster
     - KourierModule
    Properties:
      InstanceId:
        Fn::Jq:
          - First
          - ".[0].instance_id"
          - Fn::GetAtt:
              - ManagedKubernetesCluster
              - Nodes
Outputs:
  PrivateAPIUserInstructions:
    Label: 私网Api调用使用说明
    Description: 私网Api调用使用说明，通过以下命令发送HTTP请求访问推理服务，修改prompt的内容，即可自定义和推理服务交互的内容
    Value:
      Fn::Sub:
        - 'curl -X POST "http://${PrivateIp}/v1/chat/completions" -H "Host: ${ModelDomainName}.llm-model.svc.cluster.local" -H "Content-Type: application/json" -H "Authorization: Bearer ${VllmApiKey}" --data ''{ "model": "${ModelName}", "messages": [ { "role": "user", "content": "Tell me the recipe for tea" } ] }'''
        - PrivateIp:
            Fn::GetAtt:
              - KourierPrivateIngressResources
              - Response
          ModelName:
            Fn::FindInMap:
              - ModelMapping
              - ModelNameMap
              - Ref: Model
          ModelDomainName:
            Fn::FindInMap:
              - ModelMapping
              - ModelDomainNameMap
              - Ref: Model
          VllmApiKey:
            Fn::Join:
              - '-'
              - - 'cn'
                - Fn::GetAtt:
                    - RandomApiKey
                    - value
  PublicAPIUserInstructions:
    Condition: IsPublicEnabled
    Label: 公网API调用示例
    Description: 通过公网IP调用服务（部署时建议严格限制源IP）
    Value:
      Fn::Sub:
        - 'curl -X POST "http://${PublicIP}/v1/chat/completions" -H "Host: ${ModelDomainName}.llm-model.example.com" -H "Content-Type: application/json" -H "Authorization: Bearer ${VllmApiKey}" --data ''{ "model": "${ModelName}", "messages": [ { "role": "user", "content": "Tell me the recipe for tea" } ] }'''
        - PublicIP:
            Fn::GetAtt:
              - KourierPublicIngressResources
              - Response
          ModelName:
            Fn::FindInMap:
              - ModelMapping
              - ModelNameMap
              - Ref: Model
          ModelDomainName:
            Fn::FindInMap:
              - ModelMapping
              - ModelDomainNameMap
              - Ref: Model
          VllmApiKey:
            Fn::Join:
              - '-'
              - - 'cn'
                - Fn::GetAtt:
                    - RandomApiKey
                    - value
  API_KEY:
    NoEcho: true
    Label: 模型服务的API Key
    Value:
      Fn::Join:
        - '-'
        - - 'cn'
          - Fn::GetAtt:
              - RandomApiKey
              - value
Mappings:
  ModelMapping:
    ModelNameMap:
      'QwQ-32b': 'Qwen/QwQ-32B'
      'DeepSeek-R1_7b': 'deepseek-ai/DeepSeek-R1-Distill-Qwen-7B'
      'DeepSeek-R1_32b': 'deepseek-ai/DeepSeek-R1-Distill-Qwen-32B'
      'DeepSeek-R1_70b': 'deepseek-ai/DeepSeek-R1-Distill-Llama-70B'
    ModelDomainNameMap:
      'QwQ-32b': 'qwq'
      'DeepSeek-R1_7b': 'deepseek'
      'DeepSeek-R1_32b': 'deepseek'
      'DeepSeek-R1_70b': 'deepseek'
    MaxModelLenMap:
      'QwQ-32b': 32768
      'DeepSeek-R1_7b': 16384
      'DeepSeek-R1_32b': 32768
      'DeepSeek-R1_70b': 32768
    GpuMemoryUtilizationMap:
      'QwQ-32b': 0.95
      'DeepSeek-R1_7b': 0.9
      'DeepSeek-R1_32b': 0.95
      'DeepSeek-R1_70b': 0.95
    WorkerSystemDiskSizeMap:
      'QwQ-32b': 200
      'DeepSeek-R1_7b': 80
      'DeepSeek-R1_32b': 200
      'DeepSeek-R1_70b': 300
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - Model
        Label:
          en: Select Model
          zh-cn: 选择模型
      - Parameters:
          - ZoneId
        Label:
          en: Zone Configuration
          zh-cn: 可用区配置
      - Parameters:
          - PayType
          - PayPeriodUnit
          - PayPeriod
        Label:
          en: PayType Configuration
          zh-cn: 付费类型配置
      - Parameters:
          - WorkerInstanceType
          - WorkerSystemDiskCategory
          - NumOfNodes
          - ServiceCidr
          - PodCidr
          - LoginPassword
        Label:
          en: Kubernetes
          zh-cn: Kubernetes配置
      - Parameters:
          - VpcOption
          - VpcId
          - VSwitchId
          - VpcCidrBlock
          - VSwitchCidrBlock
        Label:
          en: Network Configuration
          zh-cn: 网络配置
      - Parameters:
          - SupportPublicAccess
        Label:
          en: 访问配置
          zh-cn: 访问配置